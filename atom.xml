<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wzwcapsule</title>
  
  
  <link href="https://www.kamiwzw.asia/atom.xml" rel="self"/>
  
  <link href="https://www.kamiwzw.asia/"/>
  <updated>2024-08-15T05:51:35.562Z</updated>
  <id>https://www.kamiwzw.asia/</id>
  
  <author>
    <name>某不知名的根号三</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据可视化之随机漫步</title>
    <link href="https://www.kamiwzw.asia/2024/08/14/matplotlib/"/>
    <id>https://www.kamiwzw.asia/2024/08/14/matplotlib/</id>
    <published>2024-08-14T10:09:07.165Z</published>
    <updated>2024-08-15T05:51:35.562Z</updated>
    
    <content type="html"><![CDATA[<h1>安装matplotlib</h1><ol><li class="lvl-3"><p>更新pip工具（已更新可跳过</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>安装</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>查看版本</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip list</span><br></pre></td></tr></table></figure></li></ol><h1>绘制简单折线图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 又臭又长的名字，所以简写成plt</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">squares = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>]</span><br><span class="line"><span class="comment"># 根据传入的数组绘制出有意义的图形</span></span><br><span class="line">plt.plot(squares)</span><br><span class="line"><span class="comment"># 展示图像</span></span><br><span class="line">plt.show</span><br></pre></td></tr></table></figure><h2 id="修改标签文字和线条粗细">修改标签文字和线条粗细</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 又臭又长的名字，所以简写成plt</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">squares = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>]</span><br><span class="line"><span class="comment"># 根据传入的数组绘制出有意义的图形</span></span><br><span class="line">plt.plot(squares,linewidth=<span class="number">5</span>) <span class="comment"># linewidth表示线条粗细</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="校正图形">校正图形</h2><blockquote><p>总所周知，数组第一个对应的索引是0，也就是说在我们这个例子里0对应1，所以需要矫正</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 又臭又长的名字，所以简写成plt</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x_values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">squares = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>]</span><br><span class="line"><span class="comment"># 根据传入的数组绘制出有意义的图形</span></span><br><span class="line">plt.plot(x_values,squares,linewidth=<span class="number">5</span>) <span class="comment"># linewidth表示线条粗细</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;标题取名取中文名不显示，尽量取英文&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="使用scatter-绘制散点图并设置其样式">使用scatter()绘制散点图并设置其样式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制单个点</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.scatter(<span class="number">2</span>,<span class="number">4</span>) <span class="comment"># 传入点的位置</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>下面来添加样式</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制单个点</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.scatter(<span class="number">2</span>,<span class="number">4</span>,s=<span class="number">200</span>) <span class="comment"># 实参s为点的尺寸</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,which=<span class="string">&#x27;major&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="使用scatter绘制一系列点">使用scatter绘制一系列点</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x_values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">y_values = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">plt.scatter(x_values,y_values,s=<span class="number">100</span>) <span class="comment"># 实参s为点的尺寸</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,which=<span class="string">&#x27;major&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="自动计算数据">自动计算数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成1~1000，到1001停止，不包括1001</span></span><br><span class="line">x_values = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1001</span>))</span><br><span class="line"><span class="comment"># 简洁易读，不愧是python</span></span><br><span class="line">y_values = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> x_values]</span><br><span class="line"></span><br><span class="line">plt.scatter(x_values,y_values,s=<span class="number">40</span>) <span class="comment"># 实参s为点的尺寸</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,which=<span class="string">&#x27;major&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置每个坐标轴的取值范围</span></span><br><span class="line">plt.axis([<span class="number">0</span>,<span class="number">1100</span>,<span class="number">0</span>,<span class="number">1100000</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="删除数据点的轮廓">删除数据点的轮廓</h2><p>将实参<code>edgecolor</code>设为<code>none</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x_values,y_values,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">40</span>)</span><br></pre></td></tr></table></figure><h2 id="自定义颜色">自定义颜色</h2><p>传入参数<code>c</code>就行</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x_values,y_values,c=<span class="string">&#x27;red&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">40</span>)</span><br></pre></td></tr></table></figure><p>也可以用rgb模式给c赋值，具体颜色可以随意调节</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x_values,y_values,c=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.8</span>),edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">40</span>)</span><br></pre></td></tr></table></figure><h2 id="颜色映射">颜色映射</h2><p>人话：渐变色</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成1~1000，到1001停止，不包括1001</span></span><br><span class="line">x_values = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1001</span>))</span><br><span class="line"><span class="comment"># 简洁易读，不愧是python</span></span><br><span class="line">y_values = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> x_values]</span><br><span class="line"></span><br><span class="line">plt.scatter(x_values,y_values,c=y_values,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">40</span>) <span class="comment"># 实参s为点的尺寸</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图标标题并给坐标轴加上标签</span></span><br><span class="line">plt.title(<span class="string">&quot;square number&quot;</span>,fontsize=<span class="number">24</span>) <span class="comment"># 总标题和字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># x标题和字体大小</span></span><br><span class="line">plt.ylabel(<span class="string">&quot;y_value&quot;</span>,fontsize=<span class="number">14</span>) <span class="comment"># y标题和字体大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置刻度标记的大小</span></span><br><span class="line">plt.tick_params(axis=<span class="string">&#x27;both&#x27;</span>,which=<span class="string">&#x27;major&#x27;</span>,labelsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置每个坐标轴的取值范围</span></span><br><span class="line">plt.axis([<span class="number">0</span>,<span class="number">1100</span>,<span class="number">0</span>,<span class="number">1100000</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><em>这里我们将参数c设置成y值列表，并使用参数cmp选择颜色映射</em>看看效果：<br><img src="/img/squares_plot.png" alt="渐变"></p><p><mark>了解更多访问<a href="http://matplotlib.org/">http://matplotlib.org/</a> ,单击Examples，滚动到Color Examples，再选择colormaps_reference</mark></p><h2 id="自动保存图表">自动保存图表</h2><p>将<code>plotshow()</code>改成<code>plot.savefig</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(<span class="string">&#x27;squares_plot.png&#x27;</span>,bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第一个参数是文件名，第二个是去除图表空白处</p><h1>随机漫步</h1><h2 id="创建-RandomWalk-类">创建 RandomWalk()类</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用choice做决策</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RandomWalk</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;生成随机漫步数据的类，包含两个方法&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,num_points=<span class="number">5000</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化随机漫步属性&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.num_points = num_points</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 所有随机漫步都始于(0,0)</span></span><br><span class="line">        <span class="variable language_">self</span>.x_values = [<span class="number">0</span>]</span><br><span class="line">        <span class="variable language_">self</span>.y_values = [<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="选择方向">选择方向</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fill_walk</span>(<span class="params">self</span>):</span><br><span class="line">     <span class="string">&quot;&quot;&quot;计算随机漫步包含的所有点&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment"># 不断漫步，直至列表到达指定长度</span></span><br><span class="line">     <span class="keyword">while</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.x_values) &lt; <span class="variable language_">self</span>.num_points:</span><br><span class="line">         <span class="comment"># 前进方向与前进距离</span></span><br><span class="line">         x_direction = choice([<span class="number">1</span>,-<span class="number">1</span>]) <span class="comment"># 1向右走，-1向左走</span></span><br><span class="line">         x_distance = choice([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]) <span class="comment"># 走的步数</span></span><br><span class="line">         x_step = x_direction * x_distance</span><br><span class="line"></span><br><span class="line">         y_direction = choice([<span class="number">1</span>,-<span class="number">1</span>])</span><br><span class="line">         y_distance = choice([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">         y_step = y_direction * y_distance</span><br><span class="line"></span><br><span class="line">         <span class="comment">#禁止原地踏步</span></span><br><span class="line">         <span class="keyword">if</span> x_step == <span class="number">0</span> <span class="keyword">and</span> y_step == <span class="number">0</span>:</span><br><span class="line">             <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">         <span class="comment"># 计算下一个点位置,字典第-1个值就是从后往前数</span></span><br><span class="line">         next_x = <span class="variable language_">self</span>.x_values[-<span class="number">1</span>] + x_step</span><br><span class="line">         next_y = <span class="variable language_">self</span>.y_values[-<span class="number">1</span>] + y_step</span><br><span class="line"></span><br><span class="line">         <span class="variable language_">self</span>.x_values.append(next_x)</span><br><span class="line">         <span class="variable language_">self</span>.y_values.append(next_y)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="绘制随机漫步">绘制随机漫步</h2><p>引入类绘制就行了</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制所有点</span></span><br><span class="line">rw = RandomWalk()</span><br><span class="line">rw.fill_walk()</span><br><span class="line">plt.scatter(rw.x_values,rw.y_values,s=<span class="number">15</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="模拟多次随机漫步">模拟多次随机漫步</h2><p>加个循环就行了</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,s=<span class="number">15</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="给点着色">给点着色</h2><p>我们可以通过之前学的颜色渐变来表示点出现的先后顺序，也就是点的路径</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    point_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(rw.num_points))</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">15</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="显示起点和终点">显示起点和终点</h2><p>我们可以让起点和终点变大并用不同颜色表示，这样可以让路径更加明了</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    point_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(rw.num_points))</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修饰起点终点</span></span><br><span class="line">    plt.scatter(<span class="number">0</span>,<span class="number">0</span>,c=<span class="string">&#x27;green&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">100</span>)</span><br><span class="line">    plt.scatter(rw.x_values[-<span class="number">1</span>],rw.y_values[-<span class="number">1</span>],c=<span class="string">&#x27;red&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>看看效果：<br><img src="/img/Figure_1.png" alt="起点终点"></p><h2 id="隐藏坐标轴">隐藏坐标轴</h2><p>我们关注的是随机漫步的路径，坐标轴多少有点碍眼，<s>可以用一串又臭又长的方法，选false就行</s>在<code>《Python编程-从入门到实践》-【美】Eric Matthes 著</code>这本书中的方法有问题，生成的图一片空白，需要先给<code>plt.axes</code>赋值再提前才能正常显示，可以看我下面改</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    current_axes = plt.axes()</span><br><span class="line">    current_axes.get_xaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line">    current_axes.get_yaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    point_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(rw.num_points))</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修饰起点终点</span></span><br><span class="line">    plt.scatter(<span class="number">0</span>,<span class="number">0</span>,c=<span class="string">&#x27;green&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">100</span>)</span><br><span class="line">    plt.scatter(rw.x_values[-<span class="number">1</span>],rw.y_values[-<span class="number">1</span>],c=<span class="string">&#x27;red&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>隐藏之前：<img src="/img/Figure_2.png" alt="有坐标轴"><br>隐藏：<br><img src="/img/Figure_3.png" alt="w无坐标轴"></p><h2 id="增加点数">增加点数</h2><p>改个数字就行，但点变多了，点的大小也得变小，代码如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk(<span class="number">50000</span>)  <span class="comment"># 增加数量</span></span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    current_axes = plt.axes()</span><br><span class="line">    current_axes.get_xaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line">    current_axes.get_yaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    point_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(rw.num_points))</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修饰起点终点</span></span><br><span class="line">    plt.scatter(<span class="number">0</span>,<span class="number">0</span>,c=<span class="string">&#x27;green&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">10</span>)</span><br><span class="line">    plt.scatter(rw.x_values[-<span class="number">1</span>],rw.y_values[-<span class="number">1</span>],c=<span class="string">&#x27;red&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="调整尺寸适应屏幕">调整尺寸适应屏幕</h2><p>引入<code>figure</code>函数即可，可以指定图标的宽度，高度，分辨率和背景色，可以用形参dpi传入分辨率，figsize传入尺寸</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random_walk <span class="keyword">import</span> RandomWalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不断的模拟随机漫步</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 绘制所有点</span></span><br><span class="line">    rw = RandomWalk(<span class="number">50000</span>)  <span class="comment"># 增加数量</span></span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口尺寸</span></span><br><span class="line">    plt.figure(dpi=<span class="number">128</span>,figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">    current_axes = plt.axes()</span><br><span class="line">    current_axes.get_xaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line">    current_axes.get_yaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    point_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(rw.num_points))</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修饰起点终点</span></span><br><span class="line">    plt.scatter(<span class="number">0</span>,<span class="number">0</span>,c=<span class="string">&#x27;green&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">10</span>)</span><br><span class="line">    plt.scatter(rw.x_values[-<span class="number">1</span>],rw.y_values[-<span class="number">1</span>],c=<span class="string">&#x27;red&#x27;</span>,edgecolor=<span class="string">&#x27;none&#x27;</span>,s=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_runing = <span class="built_in">input</span>(<span class="string">&quot;是否停止随机漫步? (y/n): &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> keep_runing == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最终效果：<br><img src="/img/Figure_4.png" alt="艺术品"></p><p><strong><mark>这又何尝不是一件艺术品</mark></strong></p>]]></content>
    
    
    <summary type="html">使用matplotlib库绘制随机漫步和一些绘图的基本操作</summary>
    
    
    
    <category term="随手小记" scheme="https://www.kamiwzw.asia/categories/%E9%9A%8F%E6%89%8B%E5%B0%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>vercel加速博客</title>
    <link href="https://www.kamiwzw.asia/2024/08/14/vercel_accelerate%20/"/>
    <id>https://www.kamiwzw.asia/2024/08/14/vercel_accelerate%20/</id>
    <published>2024-08-14T04:15:30.934Z</published>
    <updated>2024-08-15T05:51:35.562Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前是用zeabur部署，实际体验之后发现vercel有免费的cdn服务，访问更快，这里前置工作部署vercel和zeabur方法一样</p></blockquote><h1>前置工作</h1><ul class="lvl-0"><li class="lvl-2"><p>进入<a href="https://vercel.com/">vercel官网</a>，用github账号登录并授权仓库，import自己搭建博客用的仓库</p></li><li class="lvl-2"><p>去注册一个域名，我下面都是以腾讯云为例</p></li></ul><h1>vercel官网操作</h1><ol><li class="lvl-3"><p>进入项目的settings界面</p></li><li class="lvl-3"><p>点击左侧栏<code>Domains</code></p></li><li class="lvl-3"><p>add自己注册的域名</p></li></ol><h1>腾讯云操作</h1><ol><li class="lvl-3"><p>进入域名控制面板</p></li><li class="lvl-3"><p>找到云解析DNS</p></li><li class="lvl-3"><p>进行域名解析</p><ul class="lvl-2"><li class="lvl-6">顶级域名解析主机记录选@，类型A，记录指复制粘贴vercel给的value就行</li><li class="lvl-6">二级域名解析我是www，类型是CNAME,记录值填vercel官网给的就行如图 <img src="/img/814.png" alt="dns"><br>然后等vercel那边两个选项都打上√就行了像这样 <img src="/img/verceldns.png" alt="vercel"></li></ul></li></ol><h1>效果</h1><p>先看看zeabur部署，ping的效果<img src="/img/5E317BC5662D27E4378849A0A8226FDE.png" alt="在线ping"><br>再看看vercel加速之后的效果<br><img src="/img/4E4D986E69B63759D4D87AD774C19099.png" alt="在线ping"></p>]]></content>
    
    
    <summary type="html">改用vercel部署，解决国内网站访问慢的问题</summary>
    
    
    
    <category term="网站搭建与butterfly美化" scheme="https://www.kamiwzw.asia/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8Ebutterfly%E7%BE%8E%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown语法快速入门</title>
    <link href="https://www.kamiwzw.asia/2024/08/10/2024-8-10/"/>
    <id>https://www.kamiwzw.asia/2024/08/10/2024-8-10/</id>
    <published>2024-08-10T09:16:57.252Z</published>
    <updated>2024-08-15T05:51:35.562Z</updated>
    
    <content type="html"><![CDATA[<h1>创建标题</h1><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题</p><h1>引用</h1><p>引用写法： &gt;这是一段引用效果如下</p><blockquote><p>这是一段引用</p></blockquote><h1>有序列表</h1><p>写法：注意 <code>.</code> 后要留空格</p><ol><li class="lvl-3"><p>阿巴阿巴</p></li><li class="lvl-3"><p>阿巴阿巴</p></li><li class="lvl-3"><p>阿巴阿巴</p></li></ol><h1>无序列表</h1><p>写法：<code>-</code>后空格再输入阿巴阿巴</p><ul class="lvl-0"><li class="lvl-2"><p>阿巴阿巴</p></li><li class="lvl-2"><p>阿巴阿巴</p></li></ul><h1>任务列表</h1><p>写法：<code>-</code>后加空格再打<code>[ ]</code>,中阔号内部和后面均有空格</p><ul class="lvl-0"><li class="lvl-2"><p><input type="checkbox" id="checkbox0" checked="true"><label for="checkbox0">吃饭</label></p></li><li class="lvl-2"><p><input type="checkbox" id="checkbox1" checked="true"><label for="checkbox1">睡觉</label></p></li><li class="lvl-2"><p><input type="checkbox" id="checkbox2"><label for="checkbox2">打豆豆</label></p></li></ul><h1>代码块</h1><p>写法: <code> ```key</code>（key为你需要的语言），输入代码后再以<code> '''</code>结尾</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;stdio.h&gt;</span>`</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>`</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello world\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u012102104/article/details/78950290" title="key">常用语言表格</a></p><h1>数学公式</h1><p>写法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$f(x) = \int<span class="emphasis">_&#123;-\infty&#125;^\infty  \hat f(x)\xi\,e^&#123;2 \pi i \xi x&#125;  \,\mathrm&#123;d&#125;\xi$$</span></span><br></pre></td></tr></table></figure><p>生成效果：<br>$$<br>f(x) = \int_{-\infty}^\infty  \hat f(x)\xi,e^{2 \pi i \xi x}  ,\mathrm{d}\xi<br>$$<br><a href="https://www.latexlive.com/home##" title="可以拍照生成你想要的LaTeX公式代码">LaTeX公式编辑器</a></p><h1>表格</h1><p>写法：<code>:</code>在左边为左对齐，右边为右对齐<code>|:---:|</code>是中间对齐的意思</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|姓名|年龄|性别</span><br><span class="line">|:---|---:|:---:|</span><br><span class="line">|不知名根号三|19|武装直升机|</span><br></pre></td></tr></table></figure><p>效果：</p><table><thead><tr><th style="text-align:left">姓名</th><th style="text-align:right">年龄</th><th style="text-align:center">性别</th></tr></thead><tbody><tr><td style="text-align:left">不知名根号三</td><td style="text-align:right">19</td><td style="text-align:center">武装直升机</td></tr></tbody></table><h1>脚注</h1><p>写法：点击可跳转</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">markdown是什么[^解释]</span><br><span class="line">[<span class="symbol">^解释</span>]:<span class="link">Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown 由 John Gruber 于 2004 年创建，如今已成为世界上最受欢迎的标记语言之一。</span></span><br></pre></td></tr></table></figure><p>效果:markdown是什么<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h1>分割线</h1><h2 id="写法：-效果">写法：<code>---</code>效果:</h2><hr><h1>链接</h1><p>写法1：<code>[我的追番目录](https://suwzw.zeabur.app/bangumis/ &quot;我的追番目录&quot;)</code>效果：<a href="https://suwzw.zeabur.app/bangumis/" title="我的追番目录">我的追番目录</a></p><p>写法2: 直接插入链接 <a href="https://suwzw.zeabur.app/bangumis/">https://suwzw.zeabur.app/bangumis/</a></p><h1>图片的插入</h1><p>写法：如<code>![雪之下雪乃](/img/wallhaven-6d6jk6.jpg)</code>效果: <img src="/img/wallhaven-6d6jk6.jpg" alt="雪之下雪乃"></p><h1>文字</h1><p>写法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span> <span class="strong">**加粗**</span>  <span class="code">`行内代码`</span>  <span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>效果：<em>斜体</em> <strong>加粗</strong>  <code>行内代码</code>  <u>下划线</u></p><h1>表情</h1><p>写法：<code>:表情名:</code>如<code>:smile:</code>效果<br>😄表情大全：<a href="https://blog.csdn.net/qq_40896997/article/details/106551767">https://blog.csdn.net/qq_40896997/article/details/106551767</a></p><h1>上标|下标|高亮</h1><p>写法：<code>H~2~O</code> <code>X^2^</code> <code>==高亮高亮==</code><br>效果：H<sub>2</sub>O X<sup>2</sup>   <mark>高亮高亮</mark></p><h1>嵌入视频</h1><p>本笔记是观看b站markdown学习视频后的学习笔记(已三连 😘 )，视频如下</p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=327623069&bvid=BV1JA411h7Gw&cid=171385214&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h1>跳转标题</h1><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">创建标题</span>](<span class="link">#创建标题</span>)</span><br><span class="line">[<span class="string">引用</span>](<span class="link">#引用</span>)</span><br><span class="line">[<span class="string">有序列表</span>](<span class="link">#有序列表</span>)</span><br><span class="line">[<span class="string">无序列表</span>](<span class="link">#无序列表</span>)</span><br><span class="line">[<span class="string">任务列表</span>](<span class="link">#任务列表</span>)</span><br><span class="line">[<span class="string">代码块</span>](<span class="link">#代码块</span>)</span><br><span class="line">[<span class="string">数学公式</span>](<span class="link">#数学公式</span>)</span><br><span class="line">[<span class="string">表格</span>](<span class="link">#表格</span>)</span><br><span class="line">[<span class="string">脚注</span>](<span class="link">#脚注</span>)</span><br><span class="line">[<span class="string">分割线</span>](<span class="link">#分割线</span>)</span><br><span class="line">[<span class="string">链接</span>](<span class="link">#链接</span>)</span><br><span class="line">[<span class="string">图片的插入</span>](<span class="link">#图片的插入</span>)</span><br><span class="line">[<span class="string">文字</span>](<span class="link">#文字</span>)</span><br><span class="line">[<span class="string">表情</span>](<span class="link">#表情</span>)</span><br><span class="line">[<span class="string">上标|下标|高亮</span>](<span class="link">#上标|下标|高亮</span>)</span><br><span class="line">[<span class="string">嵌入视频</span>](<span class="link">#嵌入视频</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果：<a href="#%E5%88%9B%E5%BB%BA%E6%A0%87%E9%A2%98">创建标题</a></p><p><a href="#%E5%BC%95%E7%94%A8">引用</a></p><p><a href="#%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8">有序列表</a></p><p><a href="#%E6%97%A0%E5%BA%8F%E5%88%97%E8%A1%A8">无序列表</a></p><p><a href="#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8">任务列表</a></p><p><a href="#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块</a></p><p><a href="#%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">数学公式</a></p><p><a href="#%E8%A1%A8%E6%A0%BC">表格</a></p><p><a href="#%E8%84%9A%E6%B3%A8">脚注</a></p><p><a href="#%E5%88%86%E5%89%B2%E7%BA%BF">分割线</a></p><p><a href="#%E9%93%BE%E6%8E%A5">链接</a></p><p><a href="#%E5%9B%BE%E7%89%87%E7%9A%84%E6%8F%92%E5%85%A5">图片的插入</a></p><p><a href="#%E6%96%87%E5%AD%97">文字</a></p><p><a href="#%E8%A1%A8%E6%83%85">表情</a></p><p><a href="#%E4%B8%8A%E6%A0%87%7C%E4%B8%8B%E6%A0%87%7C%E9%AB%98%E4%BA%AE">上标|下标|高亮</a></p><p><a href="#%E5%B5%8C%E5%85%A5%E8%A7%86%E9%A2%91">嵌入视频</a></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。Markdown 由 John Gruber 于 2004 年创建，如今已成为世界上最受欢迎的标记语言之一。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">记录markdown的基本语法，8分钟速通markdown语法，用来记笔记更加方便，忘了可以随时翻看</summary>
    
    
    
    <category term="随手小记" scheme="https://www.kamiwzw.asia/categories/%E9%9A%8F%E6%89%8B%E5%B0%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>无云服务器零成本个人博客搭建</title>
    <link href="https://www.kamiwzw.asia/2024/08/09/2024-8-9/"/>
    <id>https://www.kamiwzw.asia/2024/08/09/2024-8-9/</id>
    <published>2024-08-09T10:34:12.579Z</published>
    <updated>2024-08-15T05:47:25.063Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博客搭建方案</strong></p><p>Hexo ＋ Github + zeabur</p><p><strong>选择理由</strong></p><ul class="lvl-0"><li class="lvl-2"><p>不需要专门购买云服务器或云主机，靠github就能推送到远端</p></li><li class="lvl-2"><p><s>Github不死，网站不倒（不是</s></p></li></ul><h1>前置工作</h1><h2 id="必要工具">必要工具</h2><ul class="lvl-0"><li class="lvl-2"><p><a href="https://nodejs.org/zh-cn" title="点我跳转">Node.js下载</a>（安装一直点下一步即可）</p></li><li class="lvl-2"><p><a href="https://git-scm.com/download/win" title="点我下载">git下载</a>（开魔法，steam++直接加速github也行，一直点下一步即可）</p></li><li class="lvl-2"><p><a href="https://code.visualstudio.com/" title="点我">vscode下载</a></p></li></ul><h2 id="检查是否安装成功">检查是否安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p>如果返回是版本号，说明安装成功</p><p>如果git返回是”不是内部或外部命令“，需要重新配置环境变量</p><p>这里给出解决方案，点击跳转<a href="https://blog.csdn.net/weixin_43846270/article/details/126976882">添加环境变量</a></p><h2 id="官方文档">官方文档</h2><p><a href="https://hexo.io/zh-cn/docs/" title="认真阅读能解决大部分问题">文档 | Hexo</a></p><h1>开始搭建</h1><h2 id="安装hexo">安装hexo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><p>国内直接安装如果遇到问题，可以先使用npm镜像站</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>大概等待20s左右，之后再运行一次，不过<code>npm</code>要改成<code>cnpm</code></p><p>在此以后的所有命令都默认改成<code>cnpm</code> 如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cnpm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><h2 id="vscode内终端操作">vscode内终端操作</h2><ol><li class="lvl-3"><p>用vscode新建git bash终端如图<br><a href="/img/bash1.png">bash</a></p></li><li class="lvl-3"><p>初始化，新建heo文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init heo</span><br></pre></td></tr></table></figure><p>识别不到命令的话重启电脑，然后切换到新建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> heo</span><br></pre></td></tr></table></figure><p>下载依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>生成静态文件，启动服务器就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate;hexo server</span><br></pre></td></tr></table></figure><p>之后都可简写成以下命令，记得先cd到heo文件夹再使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g;hexo s</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置主题">配置主题</h2><p>hexo有丰富的主题可以使用，官网都可以找到<a href="https://hexo.io/themes/" title="点我挑选主题">Themes | Hexo</a></p><p>我这里以butterfly主题演示<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly源文件 </a></p><ol><li class="lvl-3"><p>git克隆butterfly主题，再bash中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>如果不开魔法下载不动，开魔法过不了ssl验证，建议关掉ssl验证，再bash输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>想再次打开就把<code>false</code>改成<code>true</code></p><p>如果连接不到github443端口，我是参考这篇文章解决的</p><p><a href="https://cloud.tencent.com/developer/article/2405656">解决Git连接失败：Failed to connect to github.com port 443 after 21090 ms: Couldn‘t connect to server </a></p></li><li class="lvl-3"><p>安装渲染器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>配置文件</p><p>找到<code>_config.yml</code>文件，翻到代码最下面，将主题改成butterfly<br><img src="/img/butterfly.png" alt="butterfly"></p></li><li class="lvl-3"><p>安装必要组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-util --save</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>使用经典命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo generate;hexo s</span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p><code>ctrl</code>+鼠标点击生成的 <a href="http://localhost:4000/">http://localhost:4000/</a> 可以查看效果</p></li><li class="lvl-3"><p>為了減少升級主題後帶來的不便，請使用以下方法（建議，可以不做）。</p><p>在 hexo 的根目錄創建一個文件<code>_config.butterfly.yml</code>，並把主題目錄的 <code>_config.yml</code>內容复制到<code>_config.butterfly.yml</code>去。</p><p>( 注意: 複製的是主題的 <code>_config.yml</code>，而不是 hexo 的<code>_config.yml</code>)</p><p>具体可参考<a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D%E6%8F%92%E4%BB%B6">butterfly主题作者的官方文档</a></p><h2 id=""></h2></li></ol><h2 id="部署到公网">部署到公网</h2><ol><li class="lvl-3"><p>新建github仓库</p></li></ol><p>​     <code>create a new repository</code>,选择<code>public</code>即可</p><ol start="2"><li class="lvl-3"><p>配置<code>_config.yml</code>文件</p><p>在文件内加上如下面格式的代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&#x27;https://ToKens@github.com/github用户名/仓库名&#x27;</span> <span class="comment"># 后半段是你的仓库地址，前半段是你在github申请到的ToKens</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li class="lvl-3"><p>使用经典命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo g;hexo d</span><br></pre></td></tr></table></figure><p><code>hexo d</code>用于上传github</p></li><li class="lvl-3"><p>其他</p><p>在github开发者设置中可申请到ToKens</p></li><li class="lvl-3"><p>zeabur免费获取域名</p><p>进入<a href="https://dash.zeabur.com/">Zeabur</a>，用github账户登录，新建项目随意选择一个免费的计划，然后授权github仓库，点击部署之后，生成一个免费的域名即可</p></li></ol><h2 id="每次操作的基本流程">每次操作的基本流程</h2><p>生成静态文件 $\rightarrow$ 在本地预览 $\rightarrow$ 推送到github</p><p>即 <code>hexo g</code> $\rightarrow$ <code>hexo s</code> $\rightarrow$ <code>hexo d</code></p><h2 id="配置中能够帮忙解决问题的网址和视频">配置中能够帮忙解决问题的网址和视频</h2><p>hexo官方文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p><p>butterfly中文文档：<a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D%E6%8F%92%E4%BB%B6">https://butterfly.js.org/posts/21cfbf15/#安裝插件</a></p><p>我参考的b站视频：<iframe src="//player.bilibili.com/player.html?isOutside=true&aid=1456411849&bvid=BV1Hi421a7K4&cid=1633361964&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></p>]]></content>
    
    
    <summary type="html">通过使用github page页不需要花钱买云服务器搭建网站，且使用hexo，代码量低，无需太多编程基础</summary>
    
    
    
    <category term="网站搭建与butterfly美化" scheme="https://www.kamiwzw.asia/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8Ebutterfly%E7%BE%8E%E5%8C%96/"/>
    
    
  </entry>
  
</feed>
